import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.openapi.generator' version '6.4.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.8'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.2'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.register("buildApiDoc",GenerateTask){
	generatorName.set("html2")
	inputSpec.set("$rootDir/src/main/resources/api-schema.yaml".toString())
	outputDir.set("$buildDir/apidoc".toString())
}
tasks.register("buildSpringServer",GenerateTask){
	generatorName.set("spring")
	inputSpec.set("$rootDir/src/main/resources/api-schema.yaml".toString())
	outputDir.set("$buildDir/spring")
	apiPackage.set("com.example.todoapi.controller")
	modelPackage.set("com.example.todoapi.model")
	configOptions.set([
			interfaceOnly: "true",
			userSpringboot3:"true"
	])

}
openApiValidate {
	inputSpec="$rootDir/src/main/resources/api-schema.yaml"
}
compileJava.dependsOn tasks.buildSpringServer
sourceSets.main.java.srcDir "$buildDir/spring/src/main/java"